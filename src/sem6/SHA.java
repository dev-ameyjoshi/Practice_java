package sem6;

import java.math.BigInteger ;
import java.nio.charset.StandardCharsets ;
import java.security.MessageDigest ;
import java.security.NoSuchAlgorithmException ;
// Program in Java for calculating SHA hash value
class SHA{
    public static byte[ ] getSHA( String input ) throws NoSuchAlgorithmException
    {
        // Static getInstance method is called with hashing SHA
        // Make sure you pass "SHA-256" without any spaces
        // and just a '-' in between properly
        MessageDigest md = MessageDigest.getInstance( "SHA-256" ) ;

        // To caculate message digest of an input
        // digest( ) method is called
        // which returns an array of bytes
        return md.digest( input.getBytes( StandardCharsets.UTF_8 ) ) ;
    }
    public static String toHexString( byte[ ] hash )
    {
        // For converting byte array into signum representation
        BigInteger number = new BigInteger( 1, hash ) ;
        // For converting message digest into hex value
        StringBuilder hexString = new StringBuilder( number.toString( 16 ) ) ;

        // Pad with leading zeros
        while ( hexString.length( ) < 32 )
        {
            hexString.insert( 0,  " 0 " ) ;
        }
        return hexString.toString( ) ;
    }
    public static void main( String args[ ] )
    {
        try
        {
            System.out.println( " HashCode Generated by SHA - 256 for : " ) ;
            String s1 = "Message" ;
            System.out.println( " \n " + s1 + " : " + toHexString( getSHA( s1 ) ) ) ;
            String s2 = "HashFunc" ;
            System.out.println( " \n " + s2 + " : " + toHexString( getSHA( s2 ) ) ) ;
        }
        // For specifying wrong message digest algorithms
        catch ( NoSuchAlgorithmException e ) {
            System.out.println( " Exception thrown for incorrect algorithm : " + e ) ;
        }
    }
}
